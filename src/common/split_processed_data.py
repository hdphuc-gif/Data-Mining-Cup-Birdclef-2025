# src/common/split_processed_data.py

import os
import pandas as pd
from sklearn.model_selection import train_test_split

# ƒê∆∞·ªùng d·∫´n d·ªØ li·ªáu
PROCESSED_DIR = '/kaggle/input/audio-processed/processed'
TRAIN_CSV = "/kaggle/working/Data-Mining-Cup-Birdclef-2025/data/train_a.csv"
VAL_CSV = "/kaggle/working/Data-Mining-Cup-Birdclef-2025/data/val_a.csv"

# T·∫°o danh s√°ch t·∫•t c·∫£ file .wav v√† label
records = []
for label in os.listdir(PROCESSED_DIR):
    label_dir = os.path.join(PROCESSED_DIR, label)
    if not os.path.isdir(label_dir):
        continue
    for fname in os.listdir(label_dir):
        if fname.endswith(".wav"):
            filepath = os.path.join(label_dir, fname)
            records.append({
                "filepath": filepath.replace("\\", "/"),  # ƒë·ªÉ t∆∞∆°ng th√≠ch ƒëa n·ªÅn t·∫£ng
                "label": label
            })

# Chuy·ªÉn th√†nh DataFrame
df = pd.DataFrame(records)
print(f"üì¶ T·ªïng s·ªë file: {len(df)}")
print(f"üìä S·ªë class: {df['label'].nunique()}")

# Stratified split
train_df, val_df = train_test_split(
    df,
    test_size=0.2,
    stratify=df["label"],
    random_state=42
)

# L∆∞u ra CSV
os.makedirs("data", exist_ok=True)
train_df.to_csv(TRAIN_CSV, index=False)
val_df.to_csv(VAL_CSV, index=False)
print(f"‚úÖ ƒê√£ l∆∞u: {TRAIN_CSV}, {VAL_CSV}")
